%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 2


# imu_topic: "/mavros/imu/data_raw"
# image0_topic: "/camera/infra1/image_rect_raw"
# image1_topic: "/camera/infra2/image_rect_raw"

imu_topic: "/airsim_node/drone_1/imu/imu"
image0_topic: "/airsim_node/drone_1/front_left/Scene"
image1_topic: "/airsim_node/drone_1/front_right/Scene"



output_path: "/home/m2g/vins_output"


cam0_calib: "left.yaml"
cam1_calib: "right.yaml"
image_width: 640
image_height: 480
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 7.9889208822023772e-03, -2.0948120192043929e-01,
       9.7778003824229609e-01, -5.8488846788063131e-01,
       -9.9292516933383324e-01, 1.1418585897590239e-01,
       3.2576029735280954e-02, 2.5859572030985341e+01,
       -1.1847271941893006e-01, -9.7112265736718528e-01,
       -2.0708693609588247e-01, -1.5723140860043876e+00, 0., 0., 0., 1. ]
body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 7.9475491922071928e-03, -2.1041791399627824e-01,
       9.7757922335291703e-01, -5.8487424999697935e-01,
       -9.9311317985583547e-01, 1.1261462352118579e-01,
       3.2313442493993927e-02, 2.5859526218508993e+01,
       -1.1688904336364692e-01, -9.7110362373880399e-01,
       -2.0807379340727916e-01, -1.5723309380875801e+00, 0., 0., 0., 1. ]

# body_T_cam0: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [ 0,  0, 1, 0.26,
#           -1,  0, 0, 0.0475,
#            0, -1, 0, 0, 
#            0,  0, 0, 1 ]
# body_T_cam1: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [ 0,  0, 1, 0.26,
#           -1,  0, 0, -0.0475,
#            0, -1, 0, 0, 
#            0,  0, 0, 1 ]


#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.1          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.01         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.001         # accelerometer bias random work noise standard deviation.  #0.002
gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.805         # gravity magnitude

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: -0.05                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/fast/savedfiles/output/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 

